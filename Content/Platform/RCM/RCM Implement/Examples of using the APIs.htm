<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
        <link href="../../../Resources/Stylesheets/Actimize_1.css" rel="stylesheet" />
    </head>
    <body>
        <h1><a name="_Toc500234356"></a>Examples of using the APIs</h1>
        <p class="Body">Initially, in RCM Designer, define a custom resource string in the base language for the module ‘Actimize’:</p>
        <p class="Body">
            <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Examples of using the APIs.png" style="visibility: visible;mso-wrap-style: square;width: 576px;height: 40px;" />
        </p>
        <p class="Body">Then, translate the resource strings to a local language. In this example the translations are indicated with a ‘!’ character at the beginning and end of the value:</p>
        <p class="Body">
            <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Examples of using the APIs_1.png" style="visibility: visible;mso-wrap-style: square;width: 576px;height: 29px;" />
        </p>
        <p class="Body">After finishing the definitions in the RCM Designer there are three options in the related VTL files:</p>
        <p class="Body"><span class="Strong">Option 1</span>: use tModule function, which looks the resource string up by base value:</p>
        <p class="Code">$vtlUtils.tModule("Phone Number", “ACTIMIZE”)</p>
        <p class="Body">An optional third parameter defines escaping:</p>
        <p class="Code">$vtlUtils.tModule("Phone Number", “ACTIMIZE”, "JS")</p>
        <p class="Body">In this example there are also additional parameters which are optional: escaping, and additional parameters in the resource string that are between the ‘{‘ and ’}’ character:</p>
        <p class="Code">$vtlUtils.tModule("Item of Type {0} is {1}", "ACTIMIZE", "html", [ "AML", "Closed" ])</p>
        <p class="Body"><span class="Strong">Option 2:</span> Similar to the previous example, but also specifies the module at the beginning of the VTL in order to avoid typing it every time.</p>
        <p class="Code">$vtlUtils.setModule(“ACTIMIZE”)</p>
        <p class="Code">$vtlUtils.t("Phone Number")</p>
        <p class="Body">When the module is ‘ACTIMIZE’, then the first line is not needed since the 't' function uses ‘ACTIMIZE’ as the default module.</p>
        <p class="Body">This function also has the optional parameters of escaping and additional parameters.</p>
        <p class="Code">$vtlUtils.t("Item of Type {0} is {1}", "html", [ "AML", "Closed" ])</p>
        <p class="Body"><span class="Strong">Option 3: </span>translate by the identifier:</p>
        <p class="Code">$vtlUtils.tId("actimize.phone number")</p>
        <p class="Code">$vtlUtils.tId("actimize.item of type {0} is {1}", "html", [ "AML", "Closed" ])</p>
        <p class="Body"><span class="Strong">Display in the </span><span class="Strong">RCM</span><span class="Strong">: </span>The translated data then appears in the RCM manual alert or outgoing form.</p>
        <p class="Body">Original Language: </p>
        <p class="Body">
            <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Examples of using the APIs_2.png" style="visibility: visible;mso-wrap-style: square;width: 421px;height: 164px;" />
        </p>
        <p class="Body">Translated Language:</p>
        <p class="Body">
            <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Examples of using the APIs_3.png" style="visibility: visible;mso-wrap-style: square;width: 433px;height: 183px;" />
        </p>
    </body>
</html>