<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us" MadCap:lastBlockDepth="8" MadCap:lastHeight="4254" MadCap:lastWidth="986">
    <head><title></title>
        <link href="../../../Resources/Stylesheets/Actimize_1.css" rel="stylesheet" />
    </head>
    <body>
        <h1><a name="_Ref396815660"></a><a name="_Toc500234125"></a>Create the JavaScript API</h1>
        <p class="Body">Create a new GUI Item for the Get Next feature and enter the JavaScript API in the <span class="Strong">Script</span> field.</p>
        <p class="Body">
            <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Create the JavaScript API.png" style="visibility: visible;mso-wrap-style: square;width: 245px;height: 233px;border-top-width: 1pt;border-bottom-width: 1pt;border-left-width: 1pt;border-right-width: 1pt;" />
        </p>
        <p class="Body">The API uses a predefined alert view and up to two predefined drill down queries (DDQs) that were created in the RCM Designer. It consists of the following code:</p>
        <div>
            <p class="Code">RCMAPI.workItems.getNext(</p>
            <p class="Code">activeItemsViewIdentifier,</p>
            <p class="Code">maxNumberOfActiveItems,</p>
            <p class="Code">assignableItemsDDQIdentifier,</p>
            <p class="Code">assignTarget,</p>
            <p class="Code">groupingMethodFieldIdentifier</p>
            <p class="Code">groupingMethodDDQIdentifier</p>
            <p class="Code">groupingMethodParamIdentifier</p>
            <p class="Code">)</p>
        </div>
        <p class="Body">The last three parameters of the API are optional and refer to a grouping method that uses a second DDQ and also returns related work items of the work item that was returned in the initial mandatory DDQ.</p>
        <div class="Note">
            <p class="Body">You can define several Get Next actions by building a GUI item for each one of them with a relevant API call.</p>
        </div>
        <p class="SubHeading"><a name="_Toc500234126"></a>activeItemsViewIdentifier Parameter</p>
        <p class="Body">This parameter includes the identifier of the alert view. This view is used for defining the items the current user should handle. Running this view returns a number of work items.</p>
        <p class="SubHeading"><a name="_Toc500234127"></a>maxNumberOfActiveItems Parameter</p>
        <p class="Body">This parameter describes the maximum number of active work items that can be assigned to a user at one time based on the number of work items listed in the alert view specified above.</p>
        <p class="Body">If the actual number of work items in the alert view is greater than the value of the parameter, then calling Get Next results in a failure with the following notification message: Too many work items or alerts are currently being processed. Cannot assign a new item.</p>
        <p class="Body">If grouping is enabled then each group of work items is counted as a singular work item for the purpose of checking whether or not the maximum number of active items has been exceeded. work items without a group (i.e., their grouping field is NULL) are considered as an individual work item.</p>
        <p class="SubHeading"><a name="_Toc500234128"></a>assignableItemsDDQIdentifier Parameter</p>
        <p class="Body">This parameter includes the identifier of the initial mandatory DDQ. This DDQ finds and orders the work items that can be assigned to the user. This DDQ is defined in the RCM Designer. It sets the applicable fields and prepares place holder parameters for optional on-site RCM application configuration. See also <MadCap:xref href="Changing the Values of the.htm#_Ref319507134" class="ParaTextOnly">Changing the Values of the DDQs in the RCM</MadCap:xref>.</p>
        <p class="Body">If there is an error regarding the DDQ default values then an error message is returned.</p>
        <div class="Note">
            <p class="Body">The DDQ must return the identifier of the work item</p>
            <p class="Body">The result set size is limited to one record</p>
        </div>
        <div class="Example">
            <p class="Body">Examples of DDQ:</p>
            <p class="Body">Example 1:</p>
            <div>
                <p class="Code">select a.item_id</p>
                <p class="Code">from v_acm_items a</p>
                <p class="Code">where</p>
                <p class="Code">&#160;&#160; a.owner_join_id is null and fl_deleted=0 and closed_date is null</p>
                <p class="Code">&#160;&#160; and {$permissions$alerts$a}</p>
                <p class="Code">&#160;&#160; order by a.item_date desc</p>
            </div>
            <p>Example 2:</p>
            <div>
                <p class="Code">select a.item_id</p>
                <p class="Code">from v_acm_items a</p>
                <p class="Code">left join v_acm_alert_custom_fields b on a.custom_attr_join_id = b.custom_field_join_id</p>
                <p class="Code">where</p>
                <p class="Code">&#160;&#160; a.owner_join_id is null and fl_deleted=0 and closed_date is null</p>
                <p class="Code">&#160;&#160; and {$permissions$alerts$a}</p>
                <p class="Code">&#160;&#160; and b.cs11 = 'Securities'</p>
                <p class="Code">&#160;&#160; order by a.item_date desc</p>
            </div>
        </div>
        <p class="SubHeading"><a name="_Toc500234129"></a>assignTarget Parameter</p>
        <p class="Body">This parameter includes the type of assignment and supports one of the following values:</p>
        <ul>
            <li><span class="Strong">user (Assign to User)</span> – The work items’ ownership is assigned to the user who called Get Next.</li>
        </ul>
        <ul>
            <li><span class="Strong">bu (Assign to BU)</span> – The work items are assigned to the BU of the user who called Get Next . If the logged in user who called Get Next is not mapped to a BU then an error is returned.</li>
        </ul>
        <ul>
            <li><span class="Strong">userAndBu (Assign to User and BU)</span> – The work items’ ownership is assigned to the user who called Get Next and the work item's BU is assigned to the user’s BU.</li>
        </ul>
        <p class="SubHeading"><a name="_Toc500234130"></a>Parameters of the Optional Grouping Method</p>
        <p class="Body">The last three parameters of the API are optional and refer to a grouping method that uses a second DDQ and also assigns related work items of the work item that was returned in the initial DDQ.</p>
        <p class="Body">When grouping is enabled the logic of the API changes and common values of the grouping ID are also regarded as one alert (work item).</p>
        <p class="Body">The parameters are the following:</p>
        <ul>
            <li><span class="Strong">groupingMethodFieldIdentifier</span> – The identifier of the custom or built in field of the Work Item that was returned in the initial DDQ of the API.</li>
        </ul>
        <ul>
            <li><span class="Strong">groupingMethodDDQIdentifier</span> – The identifier of a second DDQ that is used to search for groups. It is expected to search with a condition based on the value found in the field defined via the “Grouping field”.</li>
        </ul>
        <ul>
            <li>
                <p><span class="Strong">groupingMethodParamIdentifier</span> – A parameter identifier in the second DDQ in which the value of the 'groupingMethodFieldIdentifier' is placed and used.</p>
                <ul>
                    <li>All three parameters are mandatory when one of them is added to a DDQ.</li>
                    <li>Grouping assignments are limited by the configuration parameter actimize.alerts.getNext.maxGroupSize that has a default value of 50. If the group reaches this limit, then group is assigned and a warning message appears stating that not all the work items in the group were assigned.</li>
                </ul>
            </li>
        </ul>
        <div class="Example">
            <p>In the following examples of a DDQ that includes grouping, the grouping portion is shaded in grey and 'p14' is used as the grouping field. 'param1' is a parameter that was defined in the RCM Designer and is also the parameter in the GUI item 'groupingMethodParamIdentifier'.</p>
            <div>
                <p class="Code">select a.item_id</p>
                <p class="Code">from v_acm_items a</p>
                <p class="Code">&#160;&#160; left join v_acm_alert_custom_fields b on a.custom_attr_join_id = b.custom_field_join_id</p>
                <p class="Code">where</p>
                <p class="Code">&#160;&#160; a.owner_join_id is null</p>
                <p class="Code">&#160;&#160; and {$permissions$alerts$a}</p>
                <p class="Code">&#160;&#160; order by a.item_date desc</p>
                <p class="Code">select a.item_id </p>
                <p class="Code">from v_acm_items a </p>
                <p class="Code">&#160;&#160;&#160; left join v_acm_alert_custom_fields b on a.custom_attr_join_id = b.custom_field_join_id </p>
                <p class="Code">where</p>
                <p class="Code">&#160;&#160;&#160; a.p14 = ‘param1’</p>
                <p class="Code">&#160;&#160;&#160; and a.owner_join_id is null </p>
                <p class="Code">&#160;&#160;&#160; and {$permissions$alerts$a}</p>
            </div>
            <p class="Body">The following is an example of script for the GUI item that corresponds to the SQL query:</p>
            <p class="Body">
                <img src="../../../Resources/Images/Platform/RCM/RCM Implementer Guide 6/Parameters of the Optional.png" style="visibility: visible;mso-wrap-style: square;width: 553px;height: 359px;" />
            </p>
        </div>
        <div class="Note">
            <p class="Body">The grouping DDQ MUST also properly handle filtering alerts as it does in the initial DDQ.</p>
            <p class="Body">You cannot just have a DDQ that searches only by the grouping custom field. This type of search would return all types of work items that are not appropriate for assignment such as including Items that have already been assigned, lack the required user permissions, and even deleted work items.</p>
            <p class="Body">Therefore, in addition to the grouping custom field, you must specify the desired “pool” of work items on which the DDQ is searching for the grouping field value.</p>
        </div>
        <p class="Body">&#160;</p>
    </body>
</html>